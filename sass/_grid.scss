@use "sass:math";

$grid-columns: 12;
$grid-gutter: (
    "0" : 0,
    "1" : 1rem,
    "2" : 1.5rem,
    "3" : 2rem,
    "4" : 4rem,
);
$layout: flex-start, flex-end, center, space-between, space-around;

.container {
    width: 100%;
    //max-width: 1320px;
    max-width: 1140px;
    margin: 0 auto;
    padding: 0 1rem;
    box-sizing: border-box;
}

.container--fluid {
    width: 100%;
    margin: 0 auto;
    padding: 0 0;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

.row {
    display: flex;
    flex-flow: row wrap;
}

.flex--1 {
    flex: 1;
}

.flex--row {
    flex-direction: row;
}

.flex--column {
    flex-direction: column;
}

@each $val in $layout {
    .justify--#{$val} {
        justify-content: $val;
    }

    .align--#{$val} {
        align-items: $val;
    }
}

@each $key, $val in $grid-gutter {
    .gap--#{$key} > * {
        padding: $val;
    }

    .gap--#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

@include xs {
    @for $i from 1 through $grid-columns {
        .col__xs--#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col__sm--#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col__md--#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col__lg--#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col__xl--#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

@include xxl {
    @for $i from 1 through $grid-columns {
        .col__xxl--#{$i} {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns);
        }
    }
}

